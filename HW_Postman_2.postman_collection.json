{
	"info": {
		"_postman_id": "fe179d03-539a-4cfa-b178-6037ca10eca1",
		"name": "HW_Postman_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"//  Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Your test name\", function () {\r",
							"    \r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/first",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"//1. Отправить запрос.\r",
							"\r",
							"// 2. Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"let name = jsonData.name\r",
							"\r",
							"pm.test(\"Check_name\", function () {\r",
							"    pm.expect(name).to.eql(\"Kirill\");\r",
							"});\r",
							"\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"let age = jsonData.age\r",
							"\r",
							"pm.test(\"Check_age\", function () {\r",
							"    pm.expect(age).to.eql(\"28\");\r",
							"});\r",
							"\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"\r",
							"let salary = jsonData.salary\r",
							"\r",
							"pm.test(\"Check_salary\", function () {\r",
							"    pm.expect(salary).to.eql(2000);\r",
							"});\r",
							"\r",
							"// 7. Спарсить request.\r",
							" let req = request.data\r",
							"\r",
							" // 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							" let req_name = req.name\r",
							" console.log(req_name)\r",
							"\r",
							"pm.test(\"Check_name_req\", function () {\r",
							"    pm.expect(name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"\r",
							"let req_age = req.age\r",
							"console.log(req_age)\r",
							"\r",
							"pm.test(\"Check_age_req\", function () {\r",
							"    pm.expect(age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							" let req_salary = Number(req.salary)\r",
							" console.log(req_salary)\r",
							"\r",
							" pm.test(\"Check_salary_req\", function () {\r",
							"    pm.expect(salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// 11. Вывести в консоль параметр family из response.\r",
							"let family = jsonData.family\r",
							"console.log(family)\r",
							"\r",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"\r",
							"let req_u_salary_1_5_year = req.salary * 4\r",
							"let salary_1_5_check = jsonData.family.u_salary_1_5_year\r",
							"console.log(salary_1_5_check)\r",
							"\r",
							" pm.test(\"Check_u_salary_1_5_year\", function () {\r",
							"    pm.expect(salary_1_5_check).to.eql(req_u_salary_1_5_year);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Kirill",
							"type": "text"
						},
						{
							"key": "age",
							"value": "28",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}:{{port}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		}
	]
}